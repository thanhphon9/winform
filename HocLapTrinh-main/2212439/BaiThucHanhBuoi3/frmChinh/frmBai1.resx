<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCACSANwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2SiiigAooooAKKKKAGSMVeMdmbB/I/wCFPqC8kEUHmt0jZWP0
        zg/zqVGLICRtJAJB7UAOooooAKKKKACimu+xd2Ce2B3p1ABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABR
        RRQAUUUUAFUNQ17S9JyNR1G0tiBnbLMqt+ROas3l3FYWU93cNthgjaWRvRVGT+grwa+L3d1LeNFDDNPI
        8sjA8lmYtz9M4/CgD1K5+JvhuAHy7uW4b0htpG/UgD9azLn4uaeg/caZqEnu/loP/Qia80WBWYhpQfUh
        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
        JS0UUAFJRRQAtJRRQAtFFFAH/9k=
</value>
  </data>
</root>